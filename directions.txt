PSD-to-HTML: Engine Labs Contact Page

Difficulty Level: Medium

Technologies/skills used: HTML, CSS



Problem Description:

One of the most common tasks you will encounter as a front end web developer is taking a Photoshop file from a client and turning it into an HTML page. Depending on the complexity of the mockup, this can seem like a daunting task, but with enough practice you will be able to do this with your eyes closed (almost).

Now that you have the index.html and about.html pages complete, you can use them as templates for the "Contact" page. Try to match the Engine Labs About PSD (or jpg, if you don't have Photoshop) as closely as you can. This time, all the design assets you will need have been added to the sprite.png file.


Hints:
* Start off by copying the entire index.html file from your last project into both the index.html file in this project, as well as the about.html file. Then, go through and remove sections from the about.html file that aren't relevant to the about page (this will be most of them). See if there are any sections in the new page design that use a similar structure to existing pieces of the old page, and leave those sections of the old HTML in place (to be edited, obviously).

* If you did the RealtyCorp assignment about CSS3 effects, you should remember how to do the rollover state for the team photos. If not, you will need to add an <a> tag that covers an individual person's photo and links to a social profile of your choosing. Each <a> will have its own background image.

General hints: 

* Start building the page from the top and continue downwards.

* Try to break the page into vertically-stacking sections (header, hero image, quote, features, etc). Note that each section spans the width of the page (100%) and has a more narrow (960px), centered subsection where the content goes.

* Use classes effectively: come up with class names that describe the function of a particular element rather than describing the content inside it. Creating functional classes lets you style elements quickly when they need to serve a common purpose.

* Read up on absolute positioning and floats.

* Use a reset.css for cross-browser harmony. I usually use Skeleton's (http://www.getskeleton.com/) but I also recommend YUI's: http://yui.yahooapis.com/3.10.1/build/cssreset/cssreset-min.css

* Try this without using a grid framework (like Skeleton). Once you feel confident hand-coding this, investigate a grid framework and see how much time it saves you.


